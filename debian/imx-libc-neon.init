#! /bin/sh
### BEGIN INIT INFO
# Provides:          imx-libc-neon
# Required-Start:    mountdevsubfs
# X-Start-Before:    hostname keymap keyboard-setup procps pcmcia hwclock hwclockfirst hdparm hibernate-cleanup lvm2
# Required-Stop:     
# Default-Start:     2 3 4 5 S
# Default-Stop:      0 1 6
# Short-Description: Preload the libc-neon library
# Description:       Use LD_PRELOAD mechanism to preload NEON-optimized
#                    replacement glibc routines.
### END INIT INFO

PATH=/sbin:/bin  # No remote fs at start
LIBC_NEON=/lib/libc-neon.so
ETC_LD_PRELOAD=/etc/ld.so.preload
CPUINFO=/proc/cpuinfo
NAME=imx-libc-neon
DESC="libc-neon"
[ -r /etc/default/imx-libc-neon ] && . /etc/default/imx-libc-neon
. /lib/init/vars.sh

. /lib/lsb/init-functions

#Define functions for adding and removing libc-neon from the preload file.

#first check to see if the library is already inside of the preload file
#then add it.
add_preload(){
    grep $LIBC_NEON $ETC_LD_PRELOAD >/dev/null
    if [ $? -eq 1 ]; then 
        echo $LIBC_NEON >>$ETC_LD_PRELOAD
    fi
    return 0
}

#Use sed to remove our library from the preload file
remove_preload(){
    #This is a bit tricky due to the ` processing messing with our escapes
    #this pattern actually ends up looking like 
    #s/\//\\\//g once its actually passed to sed through the ` mechanism. 
    PAT=`echo $LIBC_NEON | sed -e 's/\//\\\\\//g'`
    sed -i -e "/$PAT/d" $ETC_LD_PRELOAD
    return 0
}

# We take the special measure of requiring preloading
# to be enabled by setting an environment variable.
case "$PRELOAD_IMX_LIBC_NEON" in
  [Nn]*)
    remove_preload;
	exit 0;
	;;
esac

# Even if it's enabled, we disable it on TO2 systems, 
# because the NEON unit is broken
if [ "`grep -c neon $CPUINFO`" != 1 ]; then
    remove_preload
    exit 0
fi

SCRIPTNAME=${0##*/}
SCRIPTNAME=${SCRIPTNAME#[SK]??}

ACTION="$1"
case "$ACTION" in
  start)
        [ "$VERBOSE" != no ] && log_daemon_msg "Preloading $NAME"
        add_preload
        [ "$VERBOSE" != no ] && log_end_msg 0
        exit 0
        ;;
  stop)
        [ "$VERBOSE" != no ] && log_daemon_msg "Disabling preloading of $NAME"
        remove_preload
        [ "$VERBOSE" != no ] && log_end_msg 0
        exit 0
	;;
  restart|force-reload)
	;;
  status)
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload|status}" >&2
	exit 3
	;;
esac

